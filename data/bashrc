# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# ignore duplicates or commands prepended with space
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

HISTSIZE=4000
HISTFILESIZE=4000

export LANG=en_GB.UTF-8
export LC_MESSAGES="C"
[[ $TERM == xterm ]] && export TERM=xterm-256color

# update LINES and COLUMNS after each command.
shopt -s checkwinsize

# Add color
alias less='less -R'
alias grep='grep --color=auto'
[[ `uname` == 'Darwin' ]] && alias ls='ls -G' || alias ls='ls --color=auto'

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

alias vim='nvim'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias cls='tput reset'
alias shutdown='sudo systemctl poweroff'
alias boot='sudo systemctl reboot'
alias off='sudo systemctl suspend'
alias wifi='sudo systemctl restart netctl-auto@wlp3s0.service'
alias open='xdg-open'

alias pacman=pacmatic
alias pacupg='sudo pacmatic -Syu' # Sync and upgrade all packages
alias pacin='sudo pacmatic -S'    # Install package
alias pacrem='sudo pacmatic -Rns' # Remove package and dependencies
alias pacins='sudo pacmatic -U'   # Install package from a file
alias pacreps='pacmatic -Ss'      # Search for package in the repos
alias paclist='pacmatic -Q --color always | less' # List installed packages
alias paccheck='sudo pacmatic -Sy && sudo pacmatic -Qu' # List outdated packages

alias bi='bundle ins'
alias be='bundle exec'
alias gfz="git st | sed 's/...//' | fzf"

# Halve the size of all images in the current folder
alias halfsize='ls *.* | xargs -n1 --replace convert -verbose {} -resize 50% {}'

# Slideshow with feh image viewer
# Press ENTER to load current image into Gimp. H to pause slideshow
#   slide <file or folder>
slide () {
  feh --action "gimp '%f'" --recursive --fullscreen --auto-zoom --borderless --slideshow-delay 5 --sort dirname,name
}

function q {
  links "https://google.co.uk?q=$1"
}

pac () {
  sudo pacman -S --noconfirm --noprogressbar --needed $@
}

aur () {
  name=$1
  sha1=$2
  url="https://aur.archlinux.org/cgit/aur.git/snapshot/$name.tar.gz"
  mkdir -p ~/packages > /dev/null
  pushd ~/packages > /dev/null
  rm -rf $name
  rm -rf /tmp/makepkg/$name
  curl -s $url | tar -zx
  if [ -d $name ]; then
    cd $name
    [[ $version != '' ]] && sed -i "s/^pkgver=.*/pkgver=$version/" PKGBUILD
    [[ $sha1 != '' ]] && sed -i "s/^sha1sums=.*/sha1sums=('$sha1')/" PKGBUILD
    makepkg -sf --noconfirm
    sudo pacman -U --noconfirm --noprogressbar --needed /tmp/$name*.pkg.tar
  else
    echo Could not download package
  fi
  popd
}

# Clone or update a git repo
gup () {
  repo=$1; shift
  author=$1; shift
  options=$@

  if [[ $author = '--private' ]]; then
    host=$PRIVATE_GIT
  elif [[ ! $author ]]; then
    host=$PUBLIC_GIT
  else
    host=https://github.com/$author
  fi


  if [ -d $repo ]; then
    echo updating $repo
    cd $repo
    git pull -q
    cd - > /dev/null
  else
    echo cloning $repo
    git clone -q $options $host/$repo
  fi
}

# Setup monitor at home
home () {
  xrandr --output HDMI2 --auto --pos 0x0 --output eDP1 --left-of HDMI2
}

# Setup monitor at work
work () {
  xrandr --output HDMI1 --auto --pos 0x0 --output eDP1 --left-of HDMI1
}

# No extra monitor
lap () {
  xrandr --output HDMI1 --off --output HDMI2 --off
}

export -f aur gup pac

# Colour-coded prompt
#     machine-name current-dir rubyversion@gemset [branch] $
#
parse_git_branch () {
  git symbolic-ref -q HEAD 2> /dev/null | sed 's/refs\/heads\/\(.*\)/ \1/'
}

git_modified () {
  [[ $(git status --porcelain) == '' ]] && printf $green || printf $yellow
}

ruby_version () {
  rbenv version | sed 's/ .*//'
}

grey="\[\e[38;5;248;48;5;236m\]"
blue="\[\e[38;5;15;48;5;27m\]"
green="\e[38;5;0;48;5;84m"
red="\[\e[38;5;0;48;5;1m\]"
yellow="\e[38;5;0;48;5;227m"
glow="\[\e[38;5;266m\]"

host=" \h"
workingdir=" \w"
ruby=" \$(ruby_version)"
branch=" \$(git_modified)\$(parse_git_branch) "
prompt=\$
normal="\[\033[0m\]"

PS1="$grey$host$blue$workingdir$red$ruby$branch$normal $glow$prompt$normal "

export FZF_DEFAULT_COMMAND='ag -g ""'
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
[ -f ~/.bashrc_local ] && source ~/.bashrc_local

export WORKSPACE=/mnt/c/Users/Phil/ws
export CLIENTS=$HOME/ws/documents/electricvisions/clients
export ACCOUNTS=$HOME/ws/documents/electricvisions/accounts
export PUBLIC_GIT='git@github.com:PhilT'
export PRIVATE_GIT='git@bitbucket.org:philat'

export EDITOR=vim
export CDPATH=.:$WORKSPACE:$CLIENTS:$ACCOUNTS

#eval $(dircolors -b $HOME/.dircolors)

# Only add to path if not previously executed
# (this is instead of having a ~/.profile file which isn't loaded in Bash on Windows)
[[ $PATH =~ rbenv ]] || export PATH="$HOME/bin:$HOME/.rbenv/bin:$PATH"

eval "$(rbenv init -)"
