" Setup pathogen
runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()
filetype indent on
filetype plugin on
 syntax on

Helptags
colorscheme hybrid
set background=dark
let g:molokai_original=0
highlight NonText ctermfg=0
highlight SignColumn ctermbg=8

map <C-p> :FZF<CR>
set rtp+=~/apps/fzf

set clipboard=unnamed
set autoread
set expandtab
set ignorecase
set incsearch
set noswapfile
set number
set shiftwidth=2
set backspace=2
set smartcase
set tabstop=2
set tags=./tags
set wildignore+=.git/**,tmp/**,coverage/**,log/**,app/assets/fonts/**,app/assets/images/**,db/migrate/**,node_modules/**,bin/**,fca-frontend/**,frontend/**
set so=7

map <C-b> :NERDTreeToggle<CR>

map  <Esc>[; <C-Semicolon>
map! <Esc>[; <C-Semicolon>

nmap <C-n> :cn<CR>
nmap <C-m> :cp<CR>
nmap <Leader>n :setlocal number!<CR>
nmap <Leader>o :set paste!<CR>
vmap <C-c> y: call system("xsel -i", getreg("\""))<CR>

noremap j gj
noremap k gk
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

let test#strategy = 'dispatch'
nmap <silent> <leader>T :TestNearest<CR>
nmap <silent> <leader>t :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

" only highlight current line while in insert mode
augroup CursorLine
  au!
  au InsertEnter * setlocal cursorline
  au InsertLeave * setlocal nocursorline
augroup END

" remove trailing spaces
" remove extra lines at end of file
function TrimTrailingSpacesAndNewLines()
  let cursor_pos = getpos('.')
  :silent! %s/\s\+$//e
  :silent! %s/\($\n\s*\)\+\%$/
  call setpos('.', cursor_pos)
endfunction

autocmd BufWritePre * call TrimTrailingSpacesAndNewLines()

" quit vim if NERDTree is last window
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

"close NERDTree after opening file
let NERDTreeQuitOnOpen=1

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_eruby_ruby_quiet_messages = {'regex': 'possibly useless use of a variable in void context'}

let g:gitgutter_enabled = 0

autocmd BufRead,BufNewFile *.md setlocal spell
